[project]
name = "radarx"
description = "Xarray based radar toolkit"
readme = "README.md"
authors = [
  {name = "Hamid Ali Syed", email = "hamidsyed37@gmail.com"}
]
maintainers = [
  {name = "Hamid Ali Syed", email = "hamidsyed37@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Atmospheric Science"
]

license = {text = "MIT license"}
dynamic = ["version", "dependencies"]

[project.urls]
bugs = "https://github.com/syedhamidali/radarx/issues"
changelog = "https://github.com/syedhamidali/radarx/blob/master/changelog.md"
homepage = "https://github.com/syedhamidali/radarx"
documentation = "https://radarx.reathedocs.io"

[build-system]
requires = ["setuptools>=64",
            "setuptools-scm>=8",
            "wheel",
            ]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
readme = {file = ["README.md", "docs/history.md"], content-type = "text/markdown"}

[tool.setuptools_scm]
write_to = "radarx/version.py"
# version_scheme = "post-release"
local_scheme = "no-local-version"  # To avoid post/dev versions
fallback_version = "9999"


[project.optional-dependencies]
dev = ["coverage",  # testing
        "mypy",  # linting
        "pytest",  # testing
        "ruff",  # linting
        "pooch",  # data retrieval for testing
        "pre-commit",
        "black[jupyter]",
        "blackdoc",
        "codespell",
        "pytest-cov",
        "pytest-mock",
        "pytest-check",
        "pytest-sugar",
        "pytest-watcher",
        "deepdiff",
        "pip-tools",
        "bumpver",
        "twine",
        "wheel",
        "build",
        "setuptools>=61.0.0",
        "sphinx",
        "sphinx-gallery",
        "sphinx-book-theme",
        "nbsphinx",
        "sphinx_mdinclude"]

[tool.black]
target-version = ["py39"]
line-length = 88

[tool.ruff]
target-version = "py39"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc"
]

[tool.ruff.lint]
ignore = [
    "E402",  # module level import not at top of file
    "E501",  # line too long - let black worry about that
    "E731"   # do not assign a lambda expression, use a def
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E", "W",
    # isort
    "I",
    # Pyupgrade
    "UP"
]

[tool.ruff.lint.isort]
known-first-party = ["radarx"]
